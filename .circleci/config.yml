# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  node: circleci/node@4.7

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    # This is the name of the job, feel free to change it to better match what you're trying to do!
    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of the convenience images from CircleCI's Developer Hub
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    # The executor is the environment in which the steps below will be executed - below will use a python 3.10.2 container
    # Change the version below to your required version of python

    docker:
    - image: node:18
    # In case we need a database to run tests we can generate one using a docker image
    - image: postgres:latest
      environment:
        POSTGRES_DB: node_ci
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

    steps:
      # Checkout the code as the first step. This is a dedicated CircleCI step.
      - checkout

      # We use the default image to install dependencies. We can use the orbs setup or the image configuration.
      # By default circle ci copies the files to the image.
      - run:
          name: Install dependencies
          command: npm ci

      - run:
          name: Test with npm
          command: npm test

      - run:
          name: Lint with npm
          command: npm run lint

      - run:
          name: Dummy Action
          command: echo "Hello, world!"

      - run:
          name: Run automation script
          command: ./scripts/automation.sh

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test